<% provide(:title, 'Show Reading') %>
<style>
    div.tooltip {
        position: absolute;
        text-align: center;
        width: 140px;
        height: 28px;
        padding: 4px;
        font: 12px sans-serif;
        background: lightsteelblue;
        border: 0px;
        border-radius: 8px;
        pointer-events: none;
    }
</style>
<div class="row">
  <div class="span2 offset10">
    <form>
      <input type="radio" name="mode" value="size"> Size
      <input type="radio" name="mode" value="count" checked> Count
    </form>
  </div>
</div>
<div class="row">
  <div class="span8 offset2" style="vertical-align:middle;display:table-cell;float:none" id="sunburst"></div>
</div>
<script>

var width = 960,
    height = 800,
    radius = Math.min(width, height) / 2,
    color = d3.scale.category20c();

var svg = d3.select("#sunburst").append("svg")
    .attr("width", width)
    .attr("height", height)
    .append("g")
    .attr("transform", "translate(" + width / 2 + "," + height * .5 + ")");

var partition = d3.layout.partition()
    .sort(null)
    .size([2 * Math.PI, radius * radius])
    .value(function(d) { return 1; });

var arc = d3.svg.arc()
    .startAngle(function(d) { return d.x; })
    .endAngle(function(d) { return d.x + d.dx; })
    .innerRadius(function(d) { return Math.sqrt(d.y); })
    .outerRadius(function(d) { return Math.sqrt(d.y + d.dy); });

var div = d3.select("#sunburst").append("div")
        .attr("class", "tooltip")
        .style("opacity", 0);

d3.json("/five_minute_readings/all_data", function(error, root) {

  var path = svg.datum(root).selectAll("path")
      .data(partition.nodes)
      .enter().append("path")
      .attr("display", function(d) { return d.depth ? null : "none"; }) // hide inner ring
      .attr("d", arc)
      .on("mouseover", function(d) {
          div.transition()
                  .duration(200)
                  .style("opacity", .9);
          div.html("date:"+ d.name+" power:"+ d.power+"<br/>")
                  .style("left", (d3.event.pageX) + "px")
                  .style("top", (d3.event.pageY - 28) + "px");
      })
      .on("mouseout", function(d) {
          div.transition()
                  .duration(500)
                  .style("opacity", 0);
      })
      .style("stroke", "#fff")
      .style("fill", function(d) { return color((d.children ? d : d.parent).name); })
      .style("fill-rule", "evenodd")
      .each(stash);

  d3.selectAll("input").on("change", function change() {
    var value = this.value === "count"
        ? function() { return 1; }
        : function(d) { return d.power; };

    path
        .data(partition.value(value).nodes)
        .transition()
        .duration(1500)
        .attrTween("d", arcTween);
  });
});

// Stash the old values for transition.
function stash(d) {
  d.x0 = d.x;
  d.dx0 = d.dx;
}

// Interpolate the arcs in data space.
function arcTween(a) {
  var i = d3.interpolate({x: a.x0, dx: a.dx0}, a);
  return function(t) {
    var b = i(t);
    a.x0 = b.x;
    a.dx0 = b.dx;
    return arc(b);
  };
}

d3.select(self.frameElement).style("height", height + "px");

</script>
